{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/list-of-translations/get-list.service.ts","webpack:///./src/app/list-of-translations/list-of-translations.component.css","webpack:///./src/app/list-of-translations/list-of-translations.component.html","webpack:///./src/app/list-of-translations/list-of-translations.component.ts","webpack:///./src/app/materials.module.ts","webpack:///./src/app/nav-bar/nav-bar.component.css","webpack:///./src/app/nav-bar/nav-bar.component.html","webpack:///./src/app/nav-bar/nav-bar.component.ts","webpack:///./src/app/pipes/WordTruncate.ts","webpack:///./src/app/sentence-form/sentence-form.component.css","webpack:///./src/app/sentence-form/sentence-form.component.html","webpack:///./src/app/sentence-form/sentence-form.component.ts","webpack:///./src/app/sentence-form/translate-sentence.service.ts","webpack:///./src/app/sentence-translate-detail/detail-service.service.ts","webpack:///./src/app/sentence-translate-detail/sentence-translate-detail.component.css","webpack:///./src/app/sentence-translate-detail/sentence-translate-detail.component.html","webpack:///./src/app/sentence-translate-detail/sentence-translate-detail.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SentenceFormComponent } from './sentence-form/sentence-form.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { ListOfTranslationsComponent } from './list-of-translations/list-of-translations.component';\nimport { SentenceTranslateDetailComponent } from './sentence-translate-detail/sentence-translate-detail.component';\n\nconst routes: Routes = [\n  { path: '', component: NavBarComponent },\n  { path: 'new-sentence', component: SentenceFormComponent},\n  { path: 'list-of-sentences', component: ListOfTranslationsComponent},\n  { path: 'detail-sentence/:id', component: SentenceTranslateDetailComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n\\n<mat-card>\\n    <mat-card>\\n        <h2>TransGlish - Translating to English since 2018</h2>\\n    </mat-card>\\n    <router-outlet></router-outlet>\\n</mat-card>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'transglish-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SentenceFormComponent } from './sentence-form/sentence-form.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { MaterialModule } from './materials.module';\nimport { ListOfTranslationsComponent } from './list-of-translations/list-of-translations.component';\nimport { GetListService } from './list-of-translations/get-list.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateSentenceService } from './sentence-form/translate-sentence.service';\nimport { SentenceTranslateDetailComponent } from './sentence-translate-detail/sentence-translate-detail.component';\nimport { WordTruncate } from './pipes/WordTruncate';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SentenceFormComponent,\n    NavBarComponent,\n    ListOfTranslationsComponent,\n    SentenceTranslateDetailComponent,\n    WordTruncate\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule\n  ],\n  providers: [\n    GetListService,\n    TranslateSentenceService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Sentences } from '../models/Sentences';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetListService {\n\n  base = \"http://localhost:8000\";\n  httpHeader = new HttpHeaders({'Content-Type': 'application/json'});\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  getAllTranslations(): Observable<Sentences[]>{\n    return this.http.get<Sentences[]>(this.base + \"/sentence/\", {headers: this.httpHeader});\n  }\n\n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.card-size {\\r\\n    height: 550px;\\r\\n}\\r\\n\\r\\n.word-wrap{\\r\\n    white-space: pre-line;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGlzdC1vZi10cmFuc2xhdGlvbnMvbGlzdC1vZi10cmFuc2xhdGlvbnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7Q0FDZjs7QUFFRDtJQUNJLGNBQWM7Q0FDakI7O0FBRUQ7SUFDSSxzQkFBc0I7Q0FDekIiLCJmaWxlIjoic3JjL2FwcC9saXN0LW9mLXRyYW5zbGF0aW9ucy9saXN0LW9mLXRyYW5zbGF0aW9ucy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5jYXJkLXNpemUge1xyXG4gICAgaGVpZ2h0OiA1NTBweDtcclxufVxyXG5cclxuLndvcmQtd3JhcHtcclxuICAgIHdoaXRlLXNwYWNlOiBwcmUtbGluZTtcclxufVxyXG5cclxuIl19 */\"","module.exports = \"<div class=\\\"card-size\\\">\\n    <table mat-table [dataSource]=\\\"data\\\" class=\\\"mat-elevation-z8\\\">\\n\\n        <ng-container matColumnDef=\\\"id\\\">\\n          <th mat-header-cell *matHeaderCellDef> <b>ID</b> </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> \\n            <a routerLink=\\\"/detail-sentence/{{element.id}}\\\" mat-mini-fab>{{element.id}} </a>\\n          </td>\\n        </ng-container>\\n      \\n        <ng-container matColumnDef=\\\"orig_sent\\\">\\n          <th mat-header-cell *matHeaderCellDef> <b>Original Sentence</b> </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"word-wrap\\\"> \\n            {{element.original_sentc | wordCount:30 }} \\n          </td>\\n        </ng-container>\\n      \\n        <ng-container matColumnDef=\\\"lang\\\">\\n          <th mat-header-cell *matHeaderCellDef> <b>Language</b> </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.language}} </td>\\n        </ng-container>\\n          \\n        <ng-container matColumnDef=\\\"eng_trs\\\">\\n          <th mat-header-cell *matHeaderCellDef> <b>English Translation</b> </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"word-wrap\\\"> {{element.english_sentc | wordCount:30 }} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"created\\\">\\n          <th mat-header-cell *matHeaderCellDef> <b>Created</b> </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.created | date}} </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let element; columns: displayedColumns;\\\"></tr>\\n      </table>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Sentences } from '../models/Sentences';\nimport { MatPaginator } from '@angular/material';\nimport { GetListService } from './get-list.service';\n\n@Component({\n  selector: 'app-list-of-translations',\n  templateUrl: './list-of-translations.component.html',\n  styleUrls: ['./list-of-translations.component.css']\n})\nexport class ListOfTranslationsComponent implements OnInit {\n\n  displayedColumns: string[] = ['id', 'orig_sent', 'lang', 'eng_trs', 'created'];\n  data: Sentences[] = [];\n  resultsLength = 0;\n\n  constructor(\n    private translationService: GetListService\n  ) { }\n\n  ngOnInit() {\n    this.translationService.getAllTranslations().subscribe(data => {\n      this.resultsLength = data.length;\n      this.data = data;\n    },\n    error =>{\n      console.log(error);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  imports: [\r\n      MatButtonModule,\r\n      MatTabsModule,\r\n      MatCardModule,\r\n      MatTableModule,\r\n      MatSortModule,\r\n      MatPaginatorModule,\r\n      MatFormFieldModule,\r\n      MatInputModule,\r\n      MatChipsModule,\r\n      MatIconModule\r\n  ],\r\n  exports: [\r\n      MatButtonModule,\r\n      MatTabsModule,\r\n      MatCardModule,\r\n      MatTableModule,\r\n      MatSortModule,\r\n      MatPaginatorModule,\r\n      MatFormFieldModule,\r\n      MatInputModule,\r\n      MatChipsModule,\r\n      MatIconModule\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","module.exports = \".tab-custom {\\r\\n    background-color: rgb(39, 36, 36);\\r\\n    color: white;\\r\\n    height: 600px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LWJhci9uYXYtYmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQ0FBa0M7SUFDbEMsYUFBYTtJQUNiLGNBQWM7Q0FDakIiLCJmaWxlIjoic3JjL2FwcC9uYXYtYmFyL25hdi1iYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWItY3VzdG9tIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigzOSwgMzYsIDM2KTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGhlaWdodDogNjAwcHg7XHJcbn0iXX0= */\"","module.exports = \"\\n<mat-card>\\n    <a mat-stroked-button routerLink=\\\"new-sentence\\\" color=\\\"accent\\\">New Sentence</a>\\n</mat-card>\\n<mat-tab-group mat-align-tabs=\\\"center\\\" class=\\\"tab-custom\\\">\\n  <mat-tab label=\\\"List of Translations\\\"> \\n    <app-list-of-translations></app-list-of-translations>\\n  </mat-tab>\\n</mat-tab-group>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'wordCount'\r\n})\r\nexport class WordTruncate implements PipeTransform {\r\n\r\n    transform(value: string, arg?: string) : string {\r\n        let limit = arg? parseInt(arg, 10): 10;\r\n        let trails = \"....\";\r\n\r\n        return value.length > limit ? value.substring(0, limit)+trails : value;\r\n    }\r\n\r\n}","module.exports = \".sentence-container > * {\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VudGVuY2UtZm9ybS9zZW50ZW5jZS1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0NBQ2YiLCJmaWxlIjoic3JjL2FwcC9zZW50ZW5jZS1mb3JtL3NlbnRlbmNlLWZvcm0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZW50ZW5jZS1jb250YWluZXIgPiAqIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"mat-card\\\">\\n  <form (ngSubmit)=\\\"translate_sentence()\\\" #sentenceForm=\\\"ngForm\\\">\\n    <span class=\\\"mat-card-title\\\">Enter the Sentence you want to trasnlate into English</span>\\n    <div *ngIf=\\\"enpty_string_flag\\\">\\n        <mat-chip-list>\\n          <mat-chip color=\\\"warn\\\" selected [removable]=\\\"removable\\\">Cannot have empty string\\n              <mat-icon matChipRemove *ngIf=\\\"removable\\\" (click)=\\\"remove_chip()\\\">cancel</mat-icon>\\n          </mat-chip>\\n        </mat-chip-list>\\n    </div>\\n    <div class=\\\"sentence-container\\\">\\n        <mat-form-field>  \\n            <textarea matInput placeholder=\\\"Textarea\\\" \\n              maxlength=\\\"1000\\\"\\n              [(ngModel)]=\\\"sentence.original_sentc\\\" \\n              #original_sentc = \\\"ngModel\\\"\\n              name=\\\"original_sentc\\\"\\n              id=\\\"original_sentc\\\"\\n              required></textarea>\\n          </mat-form-field>\\n    </div>\\n    <button mat-stroked-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"!sentenceForm.form.valid\\\">Submit</button>\\n    <a routerLink=\\\"/\\\" mat-button color=\\\"warn\\\">Back</a>\\n  </form>\\n</div>\"","import { Component, OnInit, ReflectiveInjector } from '@angular/core';\nimport { Sentences } from '../models/Sentences';\nimport { TranslateSentenceService } from './translate-sentence.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-sentence-form',\n  templateUrl: './sentence-form.component.html',\n  styleUrls: ['./sentence-form.component.css']\n})\nexport class SentenceFormComponent implements OnInit {\n\n  enpty_string_flag : boolean;\n  removable: boolean = true;\n  sentence: Sentences = {\n    original_sentc : ''\n  }\n\n  constructor(\n    private translateSentenceService: TranslateSentenceService,\n    private router: Router,\n    private loc: Location\n  ) { }\n\n  ngOnInit() {\n  }\n\n  remove_chip(){\n    this.enpty_string_flag = false;\n    this.sentence.original_sentc = '';\n  }\n\n  navigate(){\n    this.router.navigate(['']);\n  }\n\n  translate_sentence() {\n    if(this.sentence.original_sentc.trim().length == 0){\n      this.enpty_string_flag = true;\n      return;\n    }else{\n      this.translateSentenceService.translate_sentence(this.sentence).subscribe(data => {\n        this.navigate();\n      });\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Sentences } from '../models/Sentences';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslateSentenceService {\n\n  base = \"http://localhost:8000\";\n  httpHeader = new HttpHeaders({'Content-Type': 'application/json'});\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  translate_sentence(sentence: Sentences): Observable<Sentences>{\n    return this.http.post<Sentences>(this.base+'/sentence/', sentence, {headers: this.httpHeader});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Sentences } from '../models/Sentences';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DetailServiceService {\n\n  base = \"http://localhost:8000\";\n  httpHeader = new HttpHeaders({'Content-Type': 'application/json'});\n\n  constructor(private http: HttpClient) { }\n\n  getTrasnlation(id): Observable<Sentences>{\n    return this.http.get<Sentences>(this.base+'/sentence/'+id, {headers: this.httpHeader});\n  }\n\n}\n","module.exports = \".wrap-text{\\r\\n    white-space: pre-line;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VudGVuY2UtdHJhbnNsYXRlLWRldGFpbC9zZW50ZW5jZS10cmFuc2xhdGUtZGV0YWlsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7Q0FDekIiLCJmaWxlIjoic3JjL2FwcC9zZW50ZW5jZS10cmFuc2xhdGUtZGV0YWlsL3NlbnRlbmNlLXRyYW5zbGF0ZS1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53cmFwLXRleHR7XHJcbiAgICB3aGl0ZS1zcGFjZTogcHJlLWxpbmU7XHJcbn0iXX0= */\"","module.exports = \"<mat-card>\\n  <mat-card>\\n    <h2>Original Sentence</h2>\\n    <br>\\n    <p class=\\\"wrap-text\\\">{{sentence.original_sentc}}</p>\\n  </mat-card>\\n  <hr>\\n  <mat-card>\\n    <h2>Language of Origin</h2>\\n    <p class=\\\"wrap-text\\\">{{sentence.language}}</p>\\n  </mat-card>\\n  <hr>\\n  <mat-card>\\n    <h2>English Translation</h2>\\n    <p class=\\\"wrap-text\\\">{{sentence.english_sentc}}</p>\\n  </mat-card>\\n  <br>\\n  <a mat-button color=\\\"warn\\\" routerLink=\\\"/\\\">Home</a>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DetailServiceService } from './detail-service.service';\nimport { Sentences } from '../models/Sentences';\n\n@Component({\n  selector: 'app-sentence-translate-detail',\n  templateUrl: './sentence-translate-detail.component.html',\n  styleUrls: ['./sentence-translate-detail.component.css']\n})\nexport class SentenceTranslateDetailComponent implements OnInit {\n\n  sentence: Sentences = {\n    original_sentc : '',\n    language: '',\n    english_sentc: '',\n  };\n\n  constructor(\n    private router: ActivatedRoute,\n    private detailTranslation: DetailServiceService\n  ) { }\n\n  ngOnInit() {\n    const id = +this.router.snapshot.paramMap.get('id');\n    this.detailTranslation.getTrasnlation(id).subscribe(data=> {\n      this.sentence = data[0];\n      console.log(data[0]);\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}